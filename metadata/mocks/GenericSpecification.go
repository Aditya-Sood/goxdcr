// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	metadata "github.com/couchbase/goxdcr/metadata"
	mock "github.com/stretchr/testify/mock"
)

// GenericSpecification is an autogenerated mock type for the GenericSpecification type
type GenericSpecification struct {
	mock.Mock
}

// CloneGeneric provides a mock function with given fields:
func (_m *GenericSpecification) CloneGeneric() metadata.GenericSpecification {
	ret := _m.Called()

	var r0 metadata.GenericSpecification
	if rf, ok := ret.Get(0).(func() metadata.GenericSpecification); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(metadata.GenericSpecification)
		}
	}

	return r0
}

// GetBackfillSpec provides a mock function with given fields:
func (_m *GenericSpecification) GetBackfillSpec() *metadata.BackfillReplicationSpec {
	ret := _m.Called()

	var r0 *metadata.BackfillReplicationSpec
	if rf, ok := ret.Get(0).(func() *metadata.BackfillReplicationSpec); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*metadata.BackfillReplicationSpec)
		}
	}

	return r0
}

// GetFullId provides a mock function with given fields:
func (_m *GenericSpecification) GetFullId() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetReplicationSpec provides a mock function with given fields:
func (_m *GenericSpecification) GetReplicationSpec() *metadata.ReplicationSpecification {
	ret := _m.Called()

	var r0 *metadata.ReplicationSpecification
	if rf, ok := ret.Get(0).(func() *metadata.ReplicationSpecification); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*metadata.ReplicationSpecification)
		}
	}

	return r0
}

// RedactGeneric provides a mock function with given fields:
func (_m *GenericSpecification) RedactGeneric() metadata.GenericSpecification {
	ret := _m.Called()

	var r0 metadata.GenericSpecification
	if rf, ok := ret.Get(0).(func() metadata.GenericSpecification); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(metadata.GenericSpecification)
		}
	}

	return r0
}

// SameSpecGeneric provides a mock function with given fields: other
func (_m *GenericSpecification) SameSpecGeneric(other metadata.GenericSpecification) bool {
	ret := _m.Called(other)

	var r0 bool
	if rf, ok := ret.Get(0).(func(metadata.GenericSpecification) bool); ok {
		r0 = rf(other)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Type provides a mock function with given fields:
func (_m *GenericSpecification) Type() metadata.ReplicationType {
	ret := _m.Called()

	var r0 metadata.ReplicationType
	if rf, ok := ret.Get(0).(func() metadata.ReplicationType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(metadata.ReplicationType)
	}

	return r0
}
