// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TargetNotification is an autogenerated mock type for the TargetNotification type
type TargetNotification struct {
	mock.Mock
}

// CloneRO provides a mock function with given fields:
func (_m *TargetNotification) CloneRO() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// GetTargetBucketInfo provides a mock function with given fields:
func (_m *TargetNotification) GetTargetBucketInfo() map[string]interface{} {
	ret := _m.Called()

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func() map[string]interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	return r0
}

// GetTargetBucketUUID provides a mock function with given fields:
func (_m *TargetNotification) GetTargetBucketUUID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetTargetServerVBMap provides a mock function with given fields:
func (_m *TargetNotification) GetTargetServerVBMap() map[string][]uint16 {
	ret := _m.Called()

	var r0 map[string][]uint16
	if rf, ok := ret.Get(0).(func() map[string][]uint16); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string][]uint16)
		}
	}

	return r0
}

// IsSourceNotification provides a mock function with given fields:
func (_m *TargetNotification) IsSourceNotification() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
