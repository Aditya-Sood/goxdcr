# Copyright 2022-Present Couchbase, Inc.
#
# Use of this software is governed by the Business Source License included in
# the file licenses/BSL-Couchbase.txt.  As of the Change Date specified in that
# file, in accordance with the Business Source License, use of this software
# will be governed by the Apache License, Version 2.0, included in the file
# licenses/APL2.txt.

# =============================
# topological map information
# =============================
# cluster -> Bucket(s)
# -----------------
CLUSTER_NAME_PORT_MAP=(["C1"]=15000 ["C1P"]=15001 ["C2"]=15002 ["C2P"]=15003)
CLUSTER_NAME_XDCR_PORT_MAP=(["C1"]=15996 ["C1P"]=15997 ["C2"]=15998 ["C2P"]=15999)
CLUSTER_DEPENDENCY_MAP=(["C1P"]="C1" ["C2P"]="C2")
VAGRANT_KV_EXTERNAL_MAP=(["C1"]=15100 ["C1P"]=15101 ["C2"]=15102 ["C2P"]=15103)
VAGRANT_CAPI_EXTERNAL_MAP=(["C1"]=15010 ["C1P"]=15011 ["C2"]=15012 ["C2P"]=15013)
VAGRANT_VM_IP_MAP=(["C1"]="10.10.0.1" ["C1P"]="10.10.0.2" ["C2"]="10.10.0.3" ["C2P"]="10.10.0.4")
VAGRANT_VM_IDX_MAP=(["0"]="C1" ["1"]="C1P" ["2"]="C2" ["3"]="C2P")
# Set c1 to have 2 buckets and c2 to have 1 bucket
declare -a cluster1BucketsArr
cluster1BucketsArr=("B0" "B1")
CLUSTER_NAME_BUCKET_MAP=(["C1"]=${cluster1BucketsArr[@]} ["C2"]="B2")

# Bucket properties
declare -A BucketProperty=(["ramQuotaMB"]=100)
declare -A Bucket1Properties=(["ramQuotaMB"]=100 ["CompressionMode"]="Active")
insertPropertyIntoBucketNamePropertyMap "B0" BucketProperty
insertPropertyIntoBucketNamePropertyMap "B1" Bucket1Properties
insertPropertyIntoBucketNamePropertyMap "B2" BucketProperty

# various specific test case variables
declare -i docCounter=0
filterExpr='^(KU_| MH_)'

declare -A DefaultBucketReplProperties=(["filterExpression"]="$filterExpr" ["replicationType"]="continuous" ["checkpointInterval"]=60 ["statsInterval"]=500)

# Test cases assume vagrant up has already been called

# Each call will put in a KU document
function runDataLoad {
	writeJSONDocument "C1" "B1" "KU_${docCounter}" '{"foo":"bar"}'
	docCounter=$(($docCounter + 1))
}

function runTestCase {
	echo "============================================================================"
	echo "Running 6.0.4 to 6.6.3 mixedMode test case"
	echo "============================================================================"

	vagrantRemoveCbServerAll

	vagrantInstallCBServer 0 "6.0.4"
	vagrantInstallCBServer 1 "6.0.4"
	vagrantInstallCBServer 2 "6.6.3"
	vagrantInstallCBServer 3 "6.6.3"

	setupTopologies

	# Shorten the amount of time pipeline restarts
	local checkInterval=10
	local maxChangeCnt=3
	local maxStableCnt=3
	local coolDownPeriod=1
	setInternalSettings "C1" "TopologyChangeCheckInterval=$checkInterval" "MaxTopologyChangeCountBeforeRestart=$maxChangeCnt" "MaxTopologyStableCountBeforeRestart=$maxStableCnt" "TopologySvcCooldownPeriodSec=$coolDownPeriod"

	sleep 5
	createRemoteClusterReference "C1" "C2"
	createRemoteClusterReference "C2" "C1"
	sleep 1

	createBucketReplication "C1" "B1" "C2" "B2" DefaultBucketReplProperties

	addNodesIn
	sleep 5
	echo "Rebalancing nodes to become a 2-node source cluster"
	startRebalancing "C1"
	echo "Rebalancing nodes to become a 2-node target cluster"
	startRebalancing "C2"

	exportProvisionedConfig

	vagrantDelAlternateAddress 2
	vagrantDelAlternateAddress 3

	runDataLoad
	sleep 10
	checkItemCnt "C1" "B1" $docCounter
	checkItemCnt "C2" "B2" $docCounter

	# Upgrade source nodes
	vagrantRebalanceAndUpgrade "C1" "0" "C1P" "toy"
	vagrantDelAlternateAddress 2
	vagrantDelAlternateAddress 3

	vagrantGrepForPanic "0"
	# Write 3 docs
	local i
	for ((i = 0; $i < 3; i = $(($i + 1)))); do
		runDataLoad
	done
	sleep 20
	checkItemCnt "C1" "B1" $docCounter
	checkItemCnt "C2" "B2" $docCounter

	# Upgrade other source node
	vagrantRebalanceAndUpgrade "C1P" "1" "C1" "toy"

	vagrantGrepForPanic "1"
	# Write 3 docs
	for ((i = 0; $i < 3; i = $(($i + 1)))); do
		runDataLoad
	done
	sleep 20
	checkItemCnt "C1" "B1" $docCounter
	checkItemCnt "C2" "B2" $docCounter

	echo "============================================================================"
	echo "PASSED"
	echo "============================================================================"

}
