package mocks

import (
	base "github.com/couchbase/goxdcr/base"
	mock "github.com/stretchr/testify/mock"
)

// ConflictManagerIface is an autogenerated mock type for the ConflictManagerIface type
type ConflictManagerIface struct {
	mock.Mock
}

// ResolveConflict provides a mock function with given fields: source, target, sourceId, targetId
func (_m *ConflictManagerIface) ResolveConflict(source *base.WrappedMCRequest, target *base.SubdocLookupResponse, sourceId []byte, targetId []byte) error {
	ret := _m.Called(source, target, sourceId, targetId)

	var r0 error
	if rf, ok := ret.Get(0).(func(*base.WrappedMCRequest, *base.SubdocLookupResponse, []byte, []byte) error); ok {
		r0 = rf(source, target, sourceId, targetId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetBackToSource provides a mock function with given fields: input
func (_m *ConflictManagerIface) SetBackToSource(input *base.ConflictParams) error {
	ret := _m.Called(input)

	var r0 error
	if rf, ok := ret.Get(0).(func(*base.ConflictParams) error); ok {
		r0 = rf(input)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
