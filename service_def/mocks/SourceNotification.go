// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// SourceNotification is an autogenerated mock type for the SourceNotification type
type SourceNotification struct {
	mock.Mock
}

// CloneRO provides a mock function with given fields:
func (_m *SourceNotification) CloneRO() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// GetDcpStatsMap provides a mock function with given fields:
func (_m *SourceNotification) GetDcpStatsMap() map[string]map[string]string {
	ret := _m.Called()

	var r0 map[string]map[string]string
	if rf, ok := ret.Get(0).(func() map[string]map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]map[string]string)
		}
	}

	return r0
}

// GetDcpStatsMapLegacy provides a mock function with given fields:
func (_m *SourceNotification) GetDcpStatsMapLegacy() map[string]map[string]string {
	ret := _m.Called()

	var r0 map[string]map[string]string
	if rf, ok := ret.Get(0).(func() map[string]map[string]string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]map[string]string)
		}
	}

	return r0
}

// GetHighSeqnosMap provides a mock function with given fields:
func (_m *SourceNotification) GetHighSeqnosMap() map[string]map[uint16]uint64 {
	ret := _m.Called()

	var r0 map[string]map[uint16]uint64
	if rf, ok := ret.Get(0).(func() map[string]map[uint16]uint64); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]map[uint16]uint64)
		}
	}

	return r0
}

// GetHighSeqnosMapLegacy provides a mock function with given fields:
func (_m *SourceNotification) GetHighSeqnosMapLegacy() map[string]map[uint16]uint64 {
	ret := _m.Called()

	var r0 map[string]map[uint16]uint64
	if rf, ok := ret.Get(0).(func() map[string]map[uint16]uint64); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]map[uint16]uint64)
		}
	}

	return r0
}

// GetKvVbMapRO provides a mock function with given fields:
func (_m *SourceNotification) GetKvVbMapRO() map[string][]uint16 {
	ret := _m.Called()

	var r0 map[string][]uint16
	if rf, ok := ret.Get(0).(func() map[string][]uint16); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string][]uint16)
		}
	}

	return r0
}

// GetNumberOfSourceNodes provides a mock function with given fields:
func (_m *SourceNotification) GetNumberOfSourceNodes() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetSourceVBMapRO provides a mock function with given fields:
func (_m *SourceNotification) GetSourceVBMapRO() map[string][]uint16 {
	ret := _m.Called()

	var r0 map[string][]uint16
	if rf, ok := ret.Get(0).(func() map[string][]uint16); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string][]uint16)
		}
	}

	return r0
}

// IsSourceNotification provides a mock function with given fields:
func (_m *SourceNotification) IsSourceNotification() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
