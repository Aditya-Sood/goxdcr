package service_impl

import (
	"fmt"
	"github.com/stretchr/testify/assert"
	"testing"
)

var cert1 = []byte(`-----BEGIN CERTIFICATE-----
MIICEzCCAXygAwIBAgIIFpqwCxW7ykgwDQYJKoZIhvcNAQELBQAwJDEiMCAGA1UE
AxMZQ291Y2hiYXNlIFNlcnZlciA1NjJjMTM3YjAeFw0xMzAxMDEwMDAwMDBaFw00
OTEyMzEyMzU5NTlaMCwxKjAoBgNVBAMTIUNvdWNoYmFzZSBTZXJ2ZXIgTm9kZSAo
MTI3LjAuMC4xKTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA44lddrpNDTe6
vi5hlR8fSpWym8SdSbAZjlgdSs60un2646RN6E31Em/bkNkEe/sIxpm7IX8DKlWV
ASWQE4Emj6BkVL7YEe25aczmXUPcDsIF1vBKJX2sSN0kvkneGgDdfEfyRHgcQqYb
HafjwD6H/oopFDgTdjI3sEFicIl1m9cCAwEAAaNGMEQwDgYDVR0PAQH/BAQDAgWg
MBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwDwYDVR0RBAgwBocE
fwAAATANBgkqhkiG9w0BAQsFAAOBgQC5D76O/d/PHAHM8MLN0bBEObteS0vgpo8E
kuYShMeEUZrZH6/9VIgtDOjL27rxCBOXKQfIIezeefsPKenDP857kkSS3SniblI0
BJkTSxE9GPaWUHn7jtRUWPfSmdu0MbHVe7lT9KnD2BLh2EfrBNXH6EE8RDNeieOR
kuO0az/w7Q==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIB/TCCAWagAwIBAgIIFpqwCxHaeTgwDQYJKoZIhvcNAQELBQAwJDEiMCAGA1UE
AxMZQ291Y2hiYXNlIFNlcnZlciA1NjJjMTM3YjAeFw0xMzAxMDEwMDAwMDBaFw00
OTEyMzEyMzU5NTlaMCQxIjAgBgNVBAMTGUNvdWNoYmFzZSBTZXJ2ZXIgNTYyYzEz
N2IwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALzrLLWDETkk1Nv9kgJpLbMg
zZdL5DJazm9Cj6/+l2VHjup0w0ttN4x31/4CUOv/kuJ0Zdnr31r4D067Np2uoC8Q
BgZoOiaHQsx4vezI/Jin5RAcnW0h8hXI410KJlY16LaHB4AYoImIbY8G0xV3e/IY
OAQ9Z4iENELSguAb+nSFAgMBAAGjODA2MA4GA1UdDwEB/wQEAwICpDATBgNVHSUE
DDAKBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4GB
AHEwsxSnSanj8vzJDK3ulzzin16eNge4+rRl3klPKxUIPgwBhDBcSDStI1HAsrK8
NjaOerEf/tX/p/VUCT8BnxUxwrSy0b0/ozUSUeT3zxxCh/3dX+5quPTPHBkgQvKL
1RNNyGRnjzsILltBhHcPO0+wUmDCSf2m87QW3hbrx5wM
-----END CERTIFICATE-----`)

var cert2 = []byte(`-----BEGIN CERTIFICATE-----
MIICEzCCAXygAwIBAgIIFpqwCxW7ykgwDQYJKoZIhvcNAQELBQAwJDEiMCAGA1UE
AxMZQ291Y2hiYXNlIFNlcnZlciA1NjJjMTM3YjAeFw0xMzAxMDEwMDAwMDBaFw00
OTEyMzEyMzU5NTlaMCwxKjAoBgNVBAMTIUNvdWNoYmFzZSBTZXJ2ZXIgTm9kZSAo
MTI3LjAuMC4xKTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA44lddrpNDTe6
vi5hlR8fSpWym8SdSbAZjlgdSs60un2646RN6E31Em/bkNkEe/sIxpm7IX8DKlWV
ASWQE4Emj6BkVL7YEe25aczmXUPcDsIF1vBKJX2sSN0kvkneGgDdfEfyRHgcQqYb
HafjwD6H/oopFDgTdjI3sEFicIl1m9cCAwEAAaNGMEQwDgYDVR0PAQH/BAQDAgWg
MBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwDwYDVR0RBAgwBocE
fwAAATANBgkqhkiG9w0BAQsFAAOBgQC5D76O/d/PHAHM8MLN0bBEObteS0vgpo8E
kuYShMeEUZrZH6/9VIgtDOjL27rxCBOXKQfIIezeefsPKenDP857kkSS3SniblI0
BJkTSxE9GPaWUHn7jtRUWPfSmdu0MbHVe7lT9KnD2BLh2EfrBNXH6EE8RDNeieOR
kuO0az/w7Q==
-----END CERTIFICATE-----`)

var key = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQDjiV12uk0NN7q+LmGVHx9KlbKbxJ1JsBmOWB1KzrS6fbrjpE3o
TfUSb9uQ2QR7+wjGmbshfwMqVZUBJZATgSaPoGRUvtgR7blpzOZdQ9wOwgXW8Eol
faxI3SS+Sd4aAN18R/JEeBxCphsdp+PAPof+iikUOBN2MjewQWJwiXWb1wIDAQAB
AoGBALS+GjNEvA4i1cFaoINPLJEXpsBbh0HQlAxhbCtPVXrKgxlvG7/LpUAXAMfn
y8scVxVDasWp2f7X6rv1daQ4tEJlbb8Y5uNy2dsRgO0ewN0bdX915Dj/oKbR/KNH
ONbhqayJYpvXT+gLa+/Y9HcMqnyCTXF1JAu0SkxfswzU+b0pAkEA92dWyPLIEkWP
kAdJb9sh15ggzmAyiaFydM00zUNi4hE/F+ALnnbF3Yq9ITiKUUYkJK2E9ZuhzrQb
2EZWN1MNPQJBAOtxTtSb87+LVDqyqNg6Urseh8IxAKOxMHksGrsKjvEfEYAc0XNK
O09ubOJeZjnOJ0NKobZOnep8CbZrq5QjxqMCQHvCphc/2/XH9lkGTCY4aGWBJGgY
ly9iI+9p98/2tbCBEB7RZP6QS8rXbGUB869UdyAh7TEv+XF9h7BY/ygN08ECQHUM
NpmCEnKmTLCFw2UD0b9O1UUYYW3/l86Vu5BDFn8O5/9d1E7Rl5zMk/sR3RZdw60z
fCOK//zjv1xeOMWD56sCQQCEPk0N4Ii9RldItSAQ8xJ77ny55q1HNhrQI9I5/mJf
QGQGkEiXhxnxFMZOPmMwUM223NHDhJ4Ki/KXUYNRa3Lf
-----END RSA PRIVATE KEY-----`)

var certKey = []byte(`-----BEGIN CERTIFICATE-----
MIICEzCCAXygAwIBAgIIFpqwCxW7ykgwDQYJKoZIhvcNAQELBQAwJDEiMCAGA1UE
AxMZQ291Y2hiYXNlIFNlcnZlciA1NjJjMTM3YjAeFw0xMzAxMDEwMDAwMDBaFw00
OTEyMzEyMzU5NTlaMCwxKjAoBgNVBAMTIUNvdWNoYmFzZSBTZXJ2ZXIgTm9kZSAo
MTI3LjAuMC4xKTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA44lddrpNDTe6
vi5hlR8fSpWym8SdSbAZjlgdSs60un2646RN6E31Em/bkNkEe/sIxpm7IX8DKlWV
ASWQE4Emj6BkVL7YEe25aczmXUPcDsIF1vBKJX2sSN0kvkneGgDdfEfyRHgcQqYb
HafjwD6H/oopFDgTdjI3sEFicIl1m9cCAwEAAaNGMEQwDgYDVR0PAQH/BAQDAgWg
MBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwDwYDVR0RBAgwBocE
fwAAATANBgkqhkiG9w0BAQsFAAOBgQC5D76O/d/PHAHM8MLN0bBEObteS0vgpo8E
kuYShMeEUZrZH6/9VIgtDOjL27rxCBOXKQfIIezeefsPKenDP857kkSS3SniblI0
BJkTSxE9GPaWUHn7jtRUWPfSmdu0MbHVe7lT9KnD2BLh2EfrBNXH6EE8RDNeieOR
kuO0az/w7Q==
-----END CERTIFICATE-----
-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQDjiV12uk0NN7q+LmGVHx9KlbKbxJ1JsBmOWB1KzrS6fbrjpE3o
TfUSb9uQ2QR7+wjGmbshfwMqVZUBJZATgSaPoGRUvtgR7blpzOZdQ9wOwgXW8Eol
faxI3SS+Sd4aAN18R/JEeBxCphsdp+PAPof+iikUOBN2MjewQWJwiXWb1wIDAQAB
AoGBALS+GjNEvA4i1cFaoINPLJEXpsBbh0HQlAxhbCtPVXrKgxlvG7/LpUAXAMfn
y8scVxVDasWp2f7X6rv1daQ4tEJlbb8Y5uNy2dsRgO0ewN0bdX915Dj/oKbR/KNH
ONbhqayJYpvXT+gLa+/Y9HcMqnyCTXF1JAu0SkxfswzU+b0pAkEA92dWyPLIEkWP
kAdJb9sh15ggzmAyiaFydM00zUNi4hE/F+ALnnbF3Yq9ITiKUUYkJK2E9ZuhzrQb
2EZWN1MNPQJBAOtxTtSb87+LVDqyqNg6Urseh8IxAKOxMHksGrsKjvEfEYAc0XNK
O09ubOJeZjnOJ0NKobZOnep8CbZrq5QjxqMCQHvCphc/2/XH9lkGTCY4aGWBJGgY
ly9iI+9p98/2tbCBEB7RZP6QS8rXbGUB869UdyAh7TEv+XF9h7BY/ygN08ECQHUM
NpmCEnKmTLCFw2UD0b9O1UUYYW3/l86Vu5BDFn8O5/9d1E7Rl5zMk/sR3RZdw60z
fCOK//zjv1xeOMWD56sCQQCEPk0N4Ii9RldItSAQ8xJ77ny55q1HNhrQI9I5/mJf
QGQGkEiXhxnxFMZOPmMwUM223NHDhJ4Ki/KXUYNRa3Lf
-----END RSA PRIVATE KEY-----`)

func TestProcessCertificates(t *testing.T) {
	fmt.Println("============== Test case start: TestProcessCertificates =================")
	defer fmt.Println("============== Test case end: TestProcessCertificates =================")

	assert := assert.New(t)
	sec := NewSecurityService("", nil)
	certs, err := sec.processCerts(cert1)
	assert.Nil(err)
	assert.Equal(2, len(certs))

	certs, err = sec.processCerts(cert2)
	assert.Nil(err)
	assert.Equal(1, len(certs))

	certs, err = sec.processCerts(key)
	assert.NotNil(err) // Failed to find certificate
	assert.Equal(0, len(certs))

	certs, err = sec.processCerts(certKey)
	assert.Nil(err)
	assert.Equal(1, len(certs))
}
